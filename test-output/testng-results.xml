<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-03T23:43:10 IST" name="Suite" finished-at="2024-08-03T23:45:11 IST" duration-ms="120599">
    <groups>
    </groups>
    <test started-at="2024-08-03T23:43:10 IST" name="Test" finished-at="2024-08-03T23:45:11 IST" duration-ms="120599">
      <class name="SmokeTest.LoginTests">
        <test-method is-config="true" signature="beforeClass(java.lang.String,java.lang.String)[pri:0, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:43:10 IST" name="beforeClass" finished-at="2024-08-03T23:43:10 IST" duration-ms="213" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://www.hudl.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:43:10 IST" name="beforeMethod" finished-at="2024-08-03T23:43:16 IST" duration-ms="5205" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void SmokeTest.LoginTests.LoginHudlValidUserCredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginHudlValidUserCredentials(java.lang.String,java.lang.String)[pri:1, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:43:16 IST" name="LoginHudlValidUserCredentials" description="This test case verifies the login functionality with valid credentials." data-provider="LoginWithValidUserCredentials" finished-at="2024-08-03T23:43:35 IST" duration-ms="19182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vivekgpv92@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Preeti@2024]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginHudlValidUserCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:43:35 IST" name="afterMethod" finished-at="2024-08-03T23:43:35 IST" duration-ms="600" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginHudlValidUserCredentials status=SUCCESS method=LoginTests.LoginHudlValidUserCredentials(java.lang.String,java.lang.String)[pri:1, instance:SmokeTest.LoginTests@6e9a5ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:43:35 IST" name="beforeMethod" finished-at="2024-08-03T23:43:37 IST" duration-ms="1253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void SmokeTest.LoginTests.LoginHudlInValidUserCredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginHudlInValidUserCredentials(java.lang.String,java.lang.String)[pri:2, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:43:37 IST" name="LoginHudlInValidUserCredentials" description="This test case verifies the login functionality with Invalid credentials." data-provider="LoginWithInValidUserCredentials" finished-at="2024-08-03T23:43:49 IST" duration-ms="11994" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vivekgpv92@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginHudlInValidUserCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:43:49 IST" name="afterMethod" finished-at="2024-08-03T23:43:49 IST" duration-ms="464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginHudlInValidUserCredentials status=SUCCESS method=LoginTests.LoginHudlInValidUserCredentials(java.lang.String,java.lang.String)[pri:2, instance:SmokeTest.LoginTests@6e9a5ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:43:49 IST" name="beforeMethod" finished-at="2024-08-03T23:43:50 IST" duration-ms="1269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void SmokeTest.LoginTests.LoginHudlInValidUserCredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginHudlInValidUserCredentials(java.lang.String,java.lang.String)[pri:2, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:43:50 IST" name="LoginHudlInValidUserCredentials" description="This test case verifies the login functionality with Invalid credentials." data-provider="LoginWithInValidUserCredentials" finished-at="2024-08-03T23:44:26 IST" duration-ms="36029" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vivekgpv@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Preeti@2024]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginHudlInValidUserCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:44:26 IST" name="afterMethod" finished-at="2024-08-03T23:44:27 IST" duration-ms="488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginHudlInValidUserCredentials status=SUCCESS method=LoginTests.LoginHudlInValidUserCredentials(java.lang.String,java.lang.String)[pri:2, instance:SmokeTest.LoginTests@6e9a5ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:44:27 IST" name="beforeMethod" finished-at="2024-08-03T23:44:28 IST" duration-ms="1296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void SmokeTest.LoginTests.LoginHudlInValidUserCredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginHudlInValidUserCredentials(java.lang.String,java.lang.String)[pri:2, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:44:28 IST" name="LoginHudlInValidUserCredentials" description="This test case verifies the login functionality with Invalid credentials." data-provider="LoginWithInValidUserCredentials" finished-at="2024-08-03T23:44:41 IST" duration-ms="13316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vivekgpv92@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[***********]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginHudlInValidUserCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:44:41 IST" name="afterMethod" finished-at="2024-08-03T23:44:42 IST" duration-ms="482" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginHudlInValidUserCredentials status=SUCCESS method=LoginTests.LoginHudlInValidUserCredentials(java.lang.String,java.lang.String)[pri:2, instance:SmokeTest.LoginTests@6e9a5ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:44:42 IST" name="beforeMethod" finished-at="2024-08-03T23:44:43 IST" duration-ms="1234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void SmokeTest.LoginTests.LoginHudlInValidUserCredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginHudlInValidUserCredentials(java.lang.String,java.lang.String)[pri:2, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:44:43 IST" name="LoginHudlInValidUserCredentials" description="This test case verifies the login functionality with Invalid credentials." data-provider="LoginWithInValidUserCredentials" finished-at="2024-08-03T23:44:56 IST" duration-ms="13308" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Preeti@2024]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[vivekgpv92@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginHudlInValidUserCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:44:56 IST" name="afterMethod" finished-at="2024-08-03T23:44:57 IST" duration-ms="476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginHudlInValidUserCredentials status=SUCCESS method=LoginTests.LoginHudlInValidUserCredentials(java.lang.String,java.lang.String)[pri:2, instance:SmokeTest.LoginTests@6e9a5ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:44:57 IST" name="beforeMethod" finished-at="2024-08-03T23:44:58 IST" duration-ms="1233" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void SmokeTest.LoginTests.LoginHudlWithoutUserCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginHudlWithoutUserCredentials()[pri:3, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:44:58 IST" name="LoginHudlWithoutUserCredentials" description="This test case verifies the login functionality with no user credentials is provided" finished-at="2024-08-03T23:45:10 IST" duration-ms="11764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginHudlWithoutUserCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:45:10 IST" name="afterMethod" finished-at="2024-08-03T23:45:10 IST" duration-ms="430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginHudlWithoutUserCredentials status=SUCCESS method=LoginTests.LoginHudlWithoutUserCredentials()[pri:3, instance:SmokeTest.LoginTests@6e9a5ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:SmokeTest.LoginTests@6e9a5ed8]" started-at="2024-08-03T23:45:10 IST" name="afterClass" finished-at="2024-08-03T23:45:11 IST" duration-ms="304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- SmokeTest.LoginTests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
